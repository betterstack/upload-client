{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":"","sourcesContent":["\nexport interface InputFile {\n  file: File;\n  key?: string;\n  acl?: string;\n}\nexport interface UploadedFile {\n  key: string;\n  file: File;\n  responseCode?: number;\n  errorCode?: string;\n}\n\nexport interface TaskProgress {\n  totalBytes: number;\n  loadedBytes: number;\n  loadedPercent: number;\n  filesLoadedPercent: number[];\n  filesLoadedBytes: number[];\n  filesBytes: number[];\n}\nexport type ProgressCallback = (p: TaskProgress) => void;\n\nexport interface UploadClientOpts {\n  apiKey: string;\n  log?: boolean;\n}\nexport interface UploadFunctionOpts {\n  files: InputFile[];\n  providerId: string;\n  throwUploadError?: boolean;\n}\nexport type UploadBtnTaskOptions = UploadClientOpts & UploadFunctionOpts;\n\nexport interface APIGetSignedUrlsReq {\n  apiKey: string;\n  providerId: string;\n  files: Array<{\n    key: string;\n    type: string;\n    acl?: string;\n  }>;\n}\nexport interface APIGetSignedUrlsRes {\n  files: Array<{\n    signedUrl: string;\n    key: string;\n    acl?: string;\n  }>;\n}\n\nexport interface APIPutObjectReq {\n  url: string;\n  file: File;\n  acl?: string;\n  progressCallback: (bytes: number, xhr: XMLHttpRequest) => void;\n}"]}